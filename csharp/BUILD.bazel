load("@rules_pkg//pkg:mappings.bzl", "pkg_filegroup", "pkg_files")
load("@semmle_code//:common.bzl", "zipmerge")
load("@semmle_code//:dist.bzl", "dist")

package(default_visibility = ["//visibility:public"])

alias(
    name = "dbscheme",
    actual = "//csharp/ql/lib:dbscheme",
)

alias(
    name = "dbscheme-stats",
    actual = "//csharp/ql/lib:dbscheme-stats",
)

pkg_files(
    name = "dbscheme-group",
    srcs = [
        ":dbscheme",
        ":dbscheme-stats",
    ],
    strip_prefix = None,
)

pkg_files(
    name = "extractor-asp",
    srcs = [
        "@semmle_code//extractor-asp:extractor-asp-fat",
    ],
    prefix = "tools",
    renames = {
        "@semmle_code//extractor-asp:extractor-asp-fat": "extractor-asp.jar",
    },
)

pkg_filegroup(
    name = "db-files",
    srcs = [
        ":dbscheme-group",
        "//csharp/downgrades",
    ],
)

pkg_files(
    name = "extra-files",
    srcs = [
        ":codeql-extractor.yml",
        "//:LICENSE",
    ],
)

# See `csharp.bzl` for an explanation of why we need zipmerge here
zipmerge(
    name = "extractor-arch",
    srcs = [
        "//csharp/autobuilder/Semmle.Autobuild.CSharp:Semmle.Autobuild.CSharp.zip",
        "//csharp/extractor/Semmle.Extraction.CSharp.Driver:Semmle.Extraction.CSharp.Driver.zip",
        "//csharp/extractor/Semmle.Extraction.CSharp.Standalone:Semmle.Extraction.CSharp.Standalone.zip",
    ],
    out = "extractor-arch.zip",
)

dist(
    name = "extractor-generic",
    srcs = [
        ":dbscheme-group",
        ":extra-files",
        ":extractor-asp",
        "//csharp/downgrades",
        "//csharp/tools",
    ],
    prefix = "csharp",
    visibility = ["//visibility:public"],
)
